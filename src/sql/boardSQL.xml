<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>


<sqlMap>
	
	<typeAlias alias="board" type="board.boardVO"/>	<!-- 자바빈의 이름을 board로 정한다. -->
		
	<resultMap class="board" id="boardRes">  <!-- 디비와 자바빈을 연시킨다. -->
		<result property="no" column="no"/>
		<result property="subject" column="subject"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<result property="content" column="content"/>
		<result property="file_orgname" column="file_orgname"/>
		<result property="file_savname" column="file_savname"/>
		<result property="readhit" column="readhit"/>
		<result property="regdate" column="regdate"/>
		<result property="ref" column="ref"/>
		<result property="re_level" column="re_level"/>
		<result property="re_step" column="re_step"/>
	</resultMap>
	
	<sql id="select-all">
		select * from SBoard66
	</sql>
	
	<sql id="where-no">
		where no = #no#
	</sql>
	
	<select id="selectAll" resultMap="boardRes"><!--select문은 디비에서 가져온값을 넣는 자바빈이 필요하다 그걸 boardRes로 정의한다. -->
		<include refid="select-all"/>
		order by no desc
	</select>
	
	<select id="selectOne" resultMap="boardRes" parameterClass="int">	<!--셀렉트문으로 디비에서 가져온 값을 자바빈에 매핑시키고 자바빈을  리턴한다 파라미터값은 인트형으로서 게시들 번호를 받는다. -->
		<include refid="select-all"/>
		<include refid="where-no"/>
	</select>
	
	<select id="selectLastNo" resultClass="board"><!--리턴하는 값이 하나일때 사용 resultClass -->
		select max(no) as no from SBoard66	<!-- 게시글의 최신번호를 리턴 -->
	</select>
	
	<select id="selectPassword" resultMap="boardRes" parameterClass="board"><!-- 비밀번호와 게시글 번호가 일치하면 정보를 가져온다. -->
		<include refid="select-all"/>
		<include refid="where-no"/>
		and password = #password#
	</select>
	
	<insert id="insertBoard" parameterClass="board">	<!-- 값을 집어넣기 폼에서 입력받은 자바빈을 보내서 디비에 넣는다. -->
		insert into SBoard66 (no,
							  subject,
							  name,
							  password,
							  content,
							  regdate,
							  ref,
							  re_level,
							  re_step
							  	)
					values (sboard_no_seq66.nextval,
							#subject#,
							#name#,
							#password#,
							#content#,
							#regdate#,
							sboard_no_seq66.currval,			<!-- 현재 시퀀스값이랑 같게 한다. -->
							#re_level#,
							#re_step#
							)	
	</insert>
	
	
	<update id="updateBoard" parameterClass="board"><!-- 업데이트폼에서 받은 데이터를 디비에 넣는다. -->
		update SBoard66 set subject = #subject#,
							name = #name#,
							password = #password#,
							content = #content#
		<include refid="where-no"/> 
	</update>
	
	<update id="updateFile" parameterClass="board">	<!-- 글 정보를 먼저 입력하고 업로드 파일을 디비에 넣기위해 따로 빼두었다. -->
		update SBoard66 set file_orgname = #file_orgname#,
							file_savname = #file_savname#
		<include refid="where-no"/>
	</update>
	
	<update id="updateReadHit" parameterClass="board"> 
		update SBoard66 set readhit = readhit+1
		<include refid="where-no"/>
	</update>
	
	<delete id="deleteBoard" parameterClass="board">
		delete from SBoard66 
		<include refid="where-no"/>
	</delete>
		
	
	<typeAlias alias="comment" type="board.commentVO"/>
		
	<resultMap class="comment" id="commentRes">
		<result property="cno" column="cno"/>
		<result property="cpassword" column="cpassword"/>
		<result property="ccontent" column="ccontent"/>
		<result property="cname" column="cname"/>
		<result property="cdate" column="cdate"/>
		<result property="no" column="no"/>
	</resultMap>	
		
	<insert id="insertComment" parameterClass="comment">
		insert into scomment66 (cno,cpassword,ccontent,cname,cdate,no)
				values (scomment_no_seq66.nextval,#cpassword#,#ccontent#,#cname#,#cdate#,#no#)
	</insert>
	
	<select id="selectCommentAll" resultMap="commentRes" parameterClass="int">
		select * from scomment66 where no = #no# order by cno desc
	</select>
	
	<select id="selectCpassword" resultMap="commentRes" parameterClass="comment">
		select * from scomment66 where no = #no# and cpassword = #cpassword#
	</select>
	
	<delete id="deleteComment" parameterClass="comment">
		delete from scomment66 where no = #no# and cno = #cno#
	</delete>
	
	
	
	
</sqlMap>































